{"version":3,"file":"ngx-logger-testing.js","sources":["ng:/ngx-logger/testing/lib/logger.service.mock.ts","ng:/ngx-logger/testing/lib/custom-logger.service.mock.ts","ng:/ngx-logger/testing/lib/http.service.mock.ts","ng:/ngx-logger/testing/lib/mapper.service.mock.ts","ng:/ngx-logger/testing/lib/logger-testing.module.ts"],"names":[],"mappings":"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","sourcesContent":["import {HttpHeaders, HttpParams} from '@angular/common/http';\nimport {LoggerConfig, NGXLoggerMonitor} from 'ngx-logger';\n\nexport class NGXLoggerMock {\n\n  constructor() {\n  }\n\n  trace(message: any, ...additional: any[]) {\n  }\n\n  debug(message: any, ...additional: any[]) {\n  }\n\n  info(message: any, ...additional: any[]) {\n  }\n\n  log(message: any, ...additional: any[]) {\n  }\n\n  warn(message: any, ...additional: any[]) {\n  }\n\n  error(message: any, ...additional: any[]) {\n  }\n\n  fatal(message: any, ...additional: any[]) {\n  }\n\n  updateConfig(config: any) {\n\n  }\n\n  setCustomHttpHeaders(headers: HttpHeaders) {\n  }\n\n  setCustomParams(params: HttpParams) {\n  }\n\n  registerMonitor(monitor: NGXLoggerMonitor) {\n  }\n\n  setWithCredentialsOptionValue(withCredentials: boolean) {\n  }\n\n  getConfigSnapshot(): LoggerConfig {\n    return new LoggerConfig();\n  }\n}\n","import {NGXLoggerMock} from './logger.service.mock';\n\n/**\n * CustomNGXLoggerServiceMock is a mock for CustomNGXLoggerService\n */\nexport class CustomNGXLoggerServiceMock {\n\n  constructor() {\n  }\n\n  create(): NGXLoggerMock {\n    // you can inject your own httpService or use the default,\n    return new NGXLoggerMock();\n  }\n}\n\n","import {Observable, of} from 'rxjs';\n\nexport class NGXLoggerHttpServiceMock {\n  constructor() {\n\n  }\n\n  logOnServer(url: string, message: string, additional: any[], timestamp: string, logLevel: string): Observable<any> {\n    return of({});\n  }\n}\n","import {Observable, of} from 'rxjs';\n\nexport class NGXMapperServiceMock {\n  constructor() {\n\n  }\n\n  public getCallerDetails(): Observable<{fileName: string, lineNumber: number, columnNumber: number}> {\n    return of({fileName: 'test.ts', lineNumber: 0, columnNumber: 0});\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { NGXLoggerMock } from './logger.service.mock';\nimport { NGXLoggerHttpServiceMock } from './http.service.mock';\nimport { CustomNGXLoggerServiceMock } from './custom-logger.service.mock';\nimport { NGXMapperServiceMock } from './mapper.service.mock';\nimport {\n  LoggerModule,\n  NGXLogger,\n  NGXLoggerHttpService,\n  CustomNGXLoggerService,\n  NGXMapperService\n} from 'ngx-logger';\n\n@NgModule({\n  imports: [LoggerModule],\n  providers: [\n    { provide: NGXLogger, useClass: NGXLoggerMock },\n    { provide: NGXLoggerHttpService, useClass: NGXLoggerHttpServiceMock },\n    { provide: CustomNGXLoggerService, useClass: CustomNGXLoggerServiceMock },\n    { provide: NGXMapperService, useClass: NGXMapperServiceMock }\n  ]\n})\nexport class LoggerTestingModule {}\n"]}